<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016 chronicle.software
  ~
  ~ Licensed under the *Apache License, Version 2.0* (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.openhft</groupId>
        <artifactId>java-parent-pom</artifactId>
        <version>1.24.0</version>
        <relativePath />
    </parent>


    <artifactId>chronicle-wire</artifactId>
    <version>2.25ea1-SNAPSHOT</version>
    <name>OpenHFT/Chronicle-Wire</name>
    <description>Chronicle-Wire</description>
    <packaging>bundle</packaging>
    <properties>
        <argLine />
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <compiler.argument>-Xlint:deprecation</compiler.argument>
        <sonar.organization>openhft</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>third-party-bom</artifactId>
                <version>3.24.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>chronicle-bom</artifactId>
                <version>2.25ea-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>compiler</artifactId>
        </dependency>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-core</artifactId>
        </dependency>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-bytes</artifactId>
        </dependency>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-threads</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
        </dependency>

        <!-- test dependencies -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>chronicle-test-framework</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.github.classgraph</groupId>
            <artifactId>classgraph</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>jlbh</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>chronicle-enterprise-snapshots</id>
            <name>Snapshot Repository</name>
            <url>
                https://nexus.chronicle.software/content/repositories/snapshots
            </url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>chronicle-enterprise-release</id>
            <url>
                https://nexus.chronicle.software/content/repositories/releases
            </url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>net.openhft</groupId>
                <artifactId>binary-compatibility-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>enforcer</goal>
                        </goals>
                        <configuration>
                            <referenceVersion>2.25ea0</referenceVersion>
                            <artifactsURI>https://teamcity.chronicle.software/repository/download</artifactsURI>
                            <binaryCompatibilityPercentageRequired>100</binaryCompatibilityPercentageRequired>
                            <extraOptions>
                                <extraOption>
                                    <name>skip-internal-packages</name>
                                    <value>net.openhft.chronicle.wire.domestic.*</value>
                                </extraOption>
                            </extraOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <user.timezone>UTC</user.timezone>
                    </systemPropertyVariables>
                    <forkCount>1</forkCount>
                    <reuseForks>true</reuseForks>
                    <runOrder>hourly</runOrder>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>-Xlint:deprecation</arg>
                        <arg>-parameters</arg>
                    </compilerArgs>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!--
                generate maven dependencies versions file that can be used later
                to install the right bundle in test phase.

                The file is:

                    target/classes/META-INF/maven/dependencies.properties
            -->
            <plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}
                        </Bundle-SymbolicName>
                        <Bundle-Name>OpenHFT :: ${project.artifactId}</Bundle-Name>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Export-Package>
                            net.openhft.chronicle.wire.*;-noimport:=true
                        </Export-Package>
                        <Import-Package>
                            org.xerial.snappy;resolution:=optional,
                            *
                        </Import-Package>
                    </instructions>
                </configuration>
                <executions>
                    <!--
                      This execution makes sure that the manifest is available
                      when the tests are executed
                    -->
                    <execution>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- benchmark network latency with Wire -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>

                <executions>
                    <!-- run this first -->
                    <execution>
                        <id>Gateway</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <mainClass>net.openhft.chronicle.wire.channel.ChronicleGatewayMain</mainClass>
                            <systemProperties>
                                <property>
                                    <key>system.properties</key>
                                    <value>/dev/null</value>
                                </property>
                                <property>
                                    <key>pauserMode</key>
                                    <value>busy</value>
                                </property>
                            </systemProperties>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>

                    <!-- ECHOING MICROSERVICE LOW LATENCY TEST -->
                    <!-- run this second with -Durl=tcp://localhost:1248 or the host of your choice -->
                    <execution>
                        <id>EchoClient</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <mainClass>net.openhft.chronicle.wire.channel.PerfLatencyMain</mainClass>
                            <systemProperties>
                                <property>
                                    <key>system.properties</key>
                                    <value>/dev/null</value>
                                </property>
                            </systemProperties>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>

                    <!-- ECHOING MICROSERVICE LATENCY WITH HIGH THROUGHPUT TEST -->
                    <!-- run this second with -Durl=tcp://localhost:1248 or the host of your choice -->
                    <execution>
                        <id>EchoClient-Throughput</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <mainClass>net.openhft.chronicle.wire.channel.PerfLatencyMain</mainClass>
                            <systemProperties>
                                <property>
                                    <key>system.properties</key>
                                    <value>/dev/null</value>
                                </property>
                                <property>
                                    <key>throughput</key>
                                    <value>1000000</value>
                                </property>
                                <property>
                                    <key>buffered</key>
                                    <value>true</value>
                                </property>
                            </systemProperties>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>

                    <!-- ECHOING MICROSERVICE LOW LATENCY TEST -->
                    <!-- run this second with -Durl=tcp://localhost:1248 or the host of your choice -->
                    <execution>
                        <id>EchoThroughput</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <mainClass>net.openhft.chronicle.wire.channel.PerfThroughputMain</mainClass>
                            <systemProperties>
                                <property>
                                    <key>system.properties</key>
                                    <value>/dev/null</value>
                                </property>
                            </systemProperties>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>

                    <execution>
                        <id>TopOfBook</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <mainClass>net.openhft.chronicle.wire.channel.book.PerfTopOfBookMain</mainClass>
                            <systemProperties>
                                <property>
                                    <key>system.properties</key>
                                    <value>/dev/null</value>
                                </property>
                            </systemProperties>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>

                    <execution>
                        <id>TopOfBook-Allocation</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <mainClass>net.openhft.chronicle.wire.channel.book.PerfTopOfBookAllocationMain</mainClass>
                            <systemProperties>
                                <property>
                                    <key>system.properties</key>
                                    <value>/dev/null</value>
                                </property>
                            </systemProperties>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <scm>
        <url>scm:git:git@github.com:OpenHFT/Chronicle-Wire.git</url>
        <connection>scm:git:git@github.com:OpenHFT/Chronicle-Wire.git</connection>
        <developerConnection>scm:git:git@github.com:OpenHFT/Chronicle-Wire.git</developerConnection>
        <tag>ea</tag>
    </scm>

    <profiles>
        <profile>
            <id>sonar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-benchmarks</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-invoker-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <pom>marshallingperf/pom.xml</pom>
                            <goals>clean,test</goals>
                            <profiles>run-benchmarks</profiles>
                            <properties>
                                <wire.version>${project.version}</wire.version>
                            </properties>
                            <streamLogs>true</streamLogs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>

                        <configuration>
                            <classpathScope>test</classpathScope>
                        </configuration>
                        <executions>
                            <execution>
                                <id>long-converter-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/java</executable>
                                    <commandlineArgs>${jvm.requiredArgs} -classpath %classpath net.openhft.chronicle.wire.AbstractTimestampLongConverterJLBHBenchmark</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!-- Disable unit tests -->
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
